(()=>{"use strict";var e={d:(s,t)=>{for(var n in t)e.o(t,n)&&!e.o(s,n)&&Object.defineProperty(s,n,{enumerable:!0,get:t[n]})},o:(e,s)=>Object.prototype.hasOwnProperty.call(e,s)},s={};e.d(s,{default:()=>compileUsercss});const t=/\s+|\/\*([^*]+|\*(?!\/))*(\*\/|$)|@namespace[^;]+;|@charset[^;]+;/giuy;function styleCodeEmpty(e){const{code:s}=e;let n=!s;if(n||null!=(n=e._empty))return n;const l=s.length,o=t;o.lastIndex=0;let r=0;for(;o.exec(s)&&(r=o.lastIndex)!==l;);return Object.defineProperty(e,"_empty",{value:n=r===l,configurable:!0}),styleCodeEmpty.lastIndex=r,n}const n=[],importScriptsOnce=(...e)=>{(e=e.map(e=>!n.includes(e=`/js/${e}`)&&e).filter(Boolean)).length&&(n.push(...e),importScripts(...e))};let l=Promise.resolve();const o=Object.assign(Object.create(null),{default:{post(e,s){let t=Object.keys(s).map(e=>`  --${e}: ${s[e].value};\n`).join("");if(t){t=":root {\n"+t+"}\n";for(const s of e)styleCodeEmpty(s)||spliceCssAfterGlobals(s,t,styleCodeEmpty.lastIndex)}}},stylus:{pre:(e,s)=>(importScriptsOnce("stylus-lang.js"),new Promise((t,n)=>{const l=Object.keys(s).map(e=>`${e} = ${s[e].value};\n`).join("");new StylusRenderer(l+e).render((e,s)=>e?n(countVarLines(e,l)):t(s))}))},less:{async pre(e,s){self.less||(self.document={currentScript:{}},self.window=self,self.less={logLevel:0,useFileCache:!1,onReady:!1}),importScriptsOnce("less.js");const t=Object.keys(s).map(e=>`@${e}:${s[e].value};\n`).join("");try{return(await less.render(t+e,{math:"parens-division"})).css}catch(e){throw countVarLines(e,t)}}},uso:{pre(e,s){importScriptsOnce("color-converter.js");const t=Object.create(null);return doReplace(e);function doReplace(e){return e.replace(/(\/\*\[\[([\w-]+)]]\*\/)([0-9a-f]{2}(?=\W))?/gi,(e,s,n,l)=>{const o=l?n+"[A]":n;let r=t[o];return void 0===r&&(r=t[o]=getValue(n,null,l)),(null!=r?r:s)+(l||"")})}function getValue(e,n,l){const o=s[e];if(!o)return e.endsWith("-rgb")?getValue(e.slice(0,-4),!0):null;let{value:r}=o;switch(o.type){case"color":if(r=colorConverter.parse(r)||null,r){l&&delete r.a;const e=n||"rgb"===r.type||null!=r.a&&1!==r.a,s=n||!e;r=colorConverter.format(r,e?"rgb":"hex",{usoMode:s})}return r;case"dropdown":case"select":return t[e]="",doReplace(r)}return r}}}});async function compileUsercss(e,s,t){let n=o[e];n||(n=o.default,null!=e&&console.warn(`Unknown preprocessor "${e}"`)),t?simplifyUsercssVars(t):t={};const r=[];n.pre&&(l=l.catch(()=>{}).then(async()=>{const e=console.log;console.log=(...e)=>r.push(e),s=await n.pre(s,t),console.log=e}),await l),importScriptsOnce("moz-parser.js","parserlib.js");const c=extractSections({code:s});return n.post&&n.post(c.sections,t),r.length&&(c.log=r),c}function countVarLines(e,s){return e._varLines=s.match(/^/gm).length,e}function simplifyUsercssVars(e){for(const s of Object.values(e)){let e=null!=s.value?s.value:s.default;switch(s.type){case"select":case"dropdown":case"image":for(const t of s.options)if(t.name===e){e=t.value;break}break;case"number":case"range":e+=s.units||""}s.value=e}}function spliceCssAfterGlobals(e,s,t){const{code:n}=e,l=/@import\s/gi;if(l.lastIndex=t,l.test(n)){importScriptsOnce("parserlib.js");const e=new parserlib.css.Parser({globalsOnly:!0});e.parse(n);const{col:s,line:l,offset:o}=e.stream.token||e.stream.peekCached();t=(n.indexOf("\r")+1||1e99)-1<o?s+n.split("\n",l).reduce((e,s)=>e+s.length+1,0):o+1}e.code=(t?n.slice(0,t)+"\n":"")+s+n.slice(t)}self.compileUsercss=s.default})();