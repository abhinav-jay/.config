(self.webpackChunkStylus=self.webpackChunkStylus||[]).push([["edit_linter_dialogs_js"],{2416:(e,t,n)=>{n.r(t),n.d(t,{showLintConfig:()=>showLintConfig,showLintHelp:()=>showLintHelp});var i=n(7209),s=n(6001),o=n(9030),r=n(6308),l=n(9521),c=n(9250),a=n(6100),u=n(923),f=n(1386);const g={},p={},C={};let d,h,y,L,S;async function showLintConfig(){if(L=await getLinter(),!L)return;await Promise.all([n.e("codemirror"),n.e("node_modules_jsonlint_lib_jsonlint_js")]).then(n.bind(n,5619));const e=await(0,i.getLZValue)(i.LZ_KEY[L]),t=u.DEFAULTS[L],o=(0,r.t)("linterConfigPopupTitle",y?"Stylelint":"CSSLint"),l=new Set(getActiveRules());y="stylelint"===L,h=p[L]||(p[L]=new Set((y?Object.keys(g[L]):g[L].map(e=>e.id)).sort()));for(const n of[e,!C[L]&&t].filter(Boolean).map(getConfigRules)){const e=new Set(h);for(const t in n)n[t]&&h.has(t)?e.delete(t):/^[a-z]+(-[a-z]+)*$/.test(t)&&delete n[t];for(const t of e)n[t]=!y&&0}C[L]=stringifyConfig(t),S=(0,a.showCodeMirrorPopup)(o,null,{extraKeys:{"Ctrl-Enter":onConfigSave},hintOptions:{hint},lint:!0,mode:"application/json",value:e?stringifyConfig(e):C[L]}),S._contents.appendChild((0,s.$create)("div",[(0,s.$create)("p",[(0,s.$createLink)(y?"https://stylelint.io/user-guide/rules/":"https://github.com/CSSLint/csslint/wiki/Rules-by-ID",(0,r.t)("linterRulesLink")),"csslint"===L?" "+(0,r.t)("linterCSSLintSettings"):""]),(0,s.$create)(".buttons",[(0,s.$create)("button.save",{onclick:onConfigSave,title:"Ctrl-Enter"},(0,r.t)("styleSaveLabel")),(0,s.$create)("button.cancel",{onclick:onConfigCancel},(0,r.t)("confirmClose")),(0,s.$create)("button.reset",{onclick:onConfigReset,title:(0,r.t)("linterResetMessage")},(0,r.t)("genericResetLabel"))])])),d=S.codebox,d.focus(),d.addOverlay({token(e){const t=e.baseToken();if(t&&"string property"===t.type){const n=e.string.substr(e.pos+1,t.size-2);if(h.has(n))return e.pos+=t.size,"string-2 known-linter-rule"+(l.has(n)?" active-linter-rule":"")}e.pos+=t?t.size:1e9}}),d.on("changes",updateConfigButtons),updateConfigButtons(),S.onClose.add(onConfigClose)}async function showLintHelp(){const e=await getLinter(),t="stylelint"===e?"https://stylelint.io/user-guide/rules/":"";let n,i;"csslint"===e?(n=(0,s.$createLink)("https://github.com/CSSLint/csslint/wiki/Rules","CSSLint"),i=e=>{for(const t of g.csslint)if(t.id===e)return(0,s.$create)("li",[(0,s.$create)("b",e+": "),t.url?(0,s.$createLink)(t.url,t.name):(0,s.$create)("span",`"${t.name}"`),(0,s.$create)("p",t.desc)])}):(n=(0,s.$createLink)(t,"stylelint"),i=e=>(0,s.$create)("li","CssSyntaxError"===e?e:(0,s.$createLink)(t+e,e)));const o=(0,r.t)("linterIssuesHelp","").split("");a.helpPopup.show((0,r.t)("linterIssues"),(0,s.$create)([o[0],n,o[1],(0,s.$create)("ul.rules",getActiveRules().map(i)),(0,s.$create)("button",{onclick:showLintConfig},(0,r.t)("configureStyle"))]))}function getActiveRules(){const e=[...(0,f.getIssues)()].map(e=>e.rule);return[...new Set(e)]}function getLexicalDepth(e){let t=0;for(;e=e.prev;)t++;return t}async function getLinter(){const e=c.default.getCurrentLinter();return e&&!g[e]&&(g[e]=await a.worker.getRules(e)),e}function hint(e){const t=g[L];let n,i;y?(n=Object.keys(t),i=t):(n=t.map(e=>e.id),i={});const s=e.getCursor(),{start:o,end:r,string:l,type:c,state:{lexical:a}}=e.getTokenAt(s),{line:u,ch:f}=s,p=l.startsWith('"'),C=l.slice(p?1:0,f-o).trim(),d=getLexicalDepth(a),h=e.getSearchCursor(/"([-\w]+)"/,{line:u,ch:o-1});let[,S]=h.find(!0)||[],w=[];if(1===d&&y)w=p?["rules"]:[];else if((1===d||2===d)&&c&&c.includes("property"))w=n;else if(2===d||3===d&&"]"===a.type)w=p?n.includes(S)&&i[S]?.[0]||[]:["true","false","null"];else if(4===d&&"severity"===S)w=["error","warning"];else if(4===d)w=["ignore","ignoreAtRules","except","severity"];else if(5===d&&"]"===a.type&&p){for(;S&&!n.includes(S);)S=(h.find(!0)||[])[1];w=i[S]?.slice(-1)[0]||n}return{list:w.filter(e=>e.startsWith(C)),from:{line:u,ch:o+(p?1:0)},to:{line:u,ch:l.endsWith('"')?r-1:r}}}function onConfigCancel(){a.helpPopup.close(),c.default.closestVisible().focus()}function onConfigClose(){d=null}function onConfigReset(e){e.preventDefault(),d.setValue(C[L]),d.focus(),updateConfigButtons()}async function onConfigSave(e){e instanceof Event&&e.preventDefault();const t=(0,l.tryJSONparse)(d.getValue());if(!t)return showLinterErrorMessage(L,(0,r.t)("linterJSONError")),void d.focus();const n=getConfigRules(t),s=getConfigRules(u.DEFAULTS[L]);for(const e in s)e in n||(n[e]=!y&&0);for(const e in n){const t=s[e],i=n[e];(i?t&&JSON.stringify(i)===JSON.stringify(t):!t)&&delete n[e]}(0,i.setLZValue)(i.LZ_KEY[L],t),d.markClean(),d.focus(),updateConfigButtons()}function getConfigRules(e){return y?e.rules||(e.rules={}):e}function stringifyConfig(e){return JSON.stringify(e,null,2).replace(/,\n\s+{\n\s+("severity":\s"\w+")\n\s+}/g,", {$1}")}async function showLinterErrorMessage(e,t){await o.messageBox.show({title:e,contents:t,className:"danger center lint-config",buttons:[(0,r.t)("confirmOK")]}),S?.codebox?.focus()}function updateConfigButtons(){(0,s.$)(".save",S).disabled=d.isClean(),(0,s.$)(".reset",S).disabled=d.getValue()===C[L],(0,s.$)(".cancel",S).textContent=(0,r.t)(d.isClean()?"confirmClose":"confirmCancel")}}}]);